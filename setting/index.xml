<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Setting on CRIB artemis</title>
    <link>https://okawak.github.io/artemis_crib/setting/index.html</link>
    <description>Recent content in Setting on CRIB artemis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://okawak.github.io/artemis_crib/setting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>new_experiment</title>
      <link>https://okawak.github.io/artemis_crib/setting/new_experiment/index.html</link>
      <pubDate>Thu, 02 Nov 2023 13:58:35 +0900</pubDate>
      <guid>https://okawak.github.io/artemis_crib/setting/new_experiment/index.html</guid>
      <description>last modified: 2023-11-02 by Kodai Okawa If you installed with &amp;ldquo;curl&amp;rdquo; command explained previous chapter, you should have artnew command. This command will make new experiment directory interactively.
Before using this command, please check and make the directory structure!
rawdata directory (like /mnt/data or /data? Create it to suit your situation.) output rootfile directory (like /data/art_output?) git repository local repository: suit for online analysis remote repository: suit for offline analysis Let&amp;rsquo;s start &amp;ldquo;artnew&amp;rdquo; command!</description>
    </item>
    <item>
      <title>new_user</title>
      <link>https://okawak.github.io/artemis_crib/setting/new_user/index.html</link>
      <pubDate>Thu, 02 Nov 2023 14:42:56 +0900</pubDate>
      <guid>https://okawak.github.io/artemis_crib/setting/new_user/index.html</guid>
      <description>last modified: 2023-11-02 by Kodai Okawa After artnew command, you can see new directory of config files.
&amp;gt; tree -a art_analysis art_analysis ├── .conf │ ├── artlogin.sh +│ └── test.sh ├── bin │ ├── art_check │ ├── art_setting │ └── artnew +└── test This is experiment name &amp;ldquo;test&amp;rdquo; example. In order to load this script test.sh, please modify &amp;ldquo;EXP_NAME&amp;rdquo; environment valiable in .zshrc.
&amp;#8203; .bashrc/.zshrc .bashrc/.zshrc export EXP_NAME=&amp;#34;test&amp;#34; # your experiment And load the config file.</description>
    </item>
    <item>
      <title>Build</title>
      <link>https://okawak.github.io/artemis_crib/setting/build/index.html</link>
      <pubDate>Thu, 02 Nov 2023 15:11:33 +0900</pubDate>
      <guid>https://okawak.github.io/artemis_crib/setting/build/index.html</guid>
      <description>last modified: 2023-11-02 by Kodai Okawa Before starting analysis, you need to build. The current version of the artemis use &amp;ldquo;cmake&amp;rdquo; so the following steps must be taken.
&amp;gt; artlogin (username) &amp;gt; mkdir build &amp;amp;&amp;amp; cd build &amp;gt; cmake .. &amp;gt; make -j4 &amp;gt; make install &amp;gt; acdacd is the alias command that is definded after artlogin command. (acd = cd your_work_directory) Also if you changed some processor, you need to do these process.</description>
    </item>
    <item>
      <title>map_config</title>
      <link>https://okawak.github.io/artemis_crib/setting/map_config/index.html</link>
      <pubDate>Thu, 02 Nov 2023 15:31:58 +0900</pubDate>
      <guid>https://okawak.github.io/artemis_crib/setting/map_config/index.html</guid>
      <description>last modified: 2023-11-02 by Kodai Okawa From this section, we start to configure the settings according to the actual experimental setup. The setting files are followings:
&amp;gt; tree . ├── mapper.conf ├── conf │ ├── map │ │ ├── ppac │ │ │ ├── dlppac.map -- snip -- │ └── seg │ ├── modulelist.yaml │ └── seglist.yaml -- snip --1. What is the map file? The data obtained from an ADC/TDC is in the form of, for example, &amp;ldquo;The data coming into channel 10 of an ADC with an ID of 1 is 100&amp;rdquo;.</description>
    </item>
  </channel>
</rss>